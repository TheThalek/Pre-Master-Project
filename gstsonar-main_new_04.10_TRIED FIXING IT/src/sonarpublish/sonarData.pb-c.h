/* Generated by the protocol buffer compiler.  DO NOT EDIT! */
/* Generated from: sonarData.proto */

#ifndef PROTOBUF_C_sonarData_2eproto__INCLUDED
#define PROTOBUF_C_sonarData_2eproto__INCLUDED

#include <protobuf-c/protobuf-c.h>

PROTOBUF_C__BEGIN_DECLS

#if PROTOBUF_C_VERSION_NUMBER < 1003000
# error This file was generated by a newer version of protoc-c which is incompatible with your libprotobuf-c headers. Please update your headers.
#elif 1003003 < PROTOBUF_C_MIN_COMPILER_VERSION
# error This file was generated by an older version of protoc-c which is incompatible with your libprotobuf-c headers. Please regenerate this file with a newer version of protoc-c.
#endif


typedef struct _SonarData__PointMessage SonarData__PointMessage;
typedef struct _SonarData__MyPoints SonarData__MyPoints;


/* --- enums --- */


/* --- messages --- */

struct  _SonarData__PointMessage
{
  ProtobufCMessage base;
  float x;
  float y;
};
#define SONAR_DATA__POINT_MESSAGE__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sonar_data__point_message__descriptor) \
    , 0, 0 }


struct  _SonarData__MyPoints
{
  ProtobufCMessage base;
  size_t n_points;
  SonarData__PointMessage **points;
};
#define SONAR_DATA__MY_POINTS__INIT \
 { PROTOBUF_C_MESSAGE_INIT (&sonar_data__my_points__descriptor) \
    , 0,NULL }


/* SonarData__PointMessage methods */
void   sonar_data__point_message__init
                     (SonarData__PointMessage         *message);
size_t sonar_data__point_message__get_packed_size
                     (const SonarData__PointMessage   *message);
size_t sonar_data__point_message__pack
                     (const SonarData__PointMessage   *message,
                      uint8_t             *out);
size_t sonar_data__point_message__pack_to_buffer
                     (const SonarData__PointMessage   *message,
                      ProtobufCBuffer     *buffer);
SonarData__PointMessage *
       sonar_data__point_message__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sonar_data__point_message__free_unpacked
                     (SonarData__PointMessage *message,
                      ProtobufCAllocator *allocator);
/* SonarData__MyPoints methods */
void   sonar_data__my_points__init
                     (SonarData__MyPoints         *message);
size_t sonar_data__my_points__get_packed_size
                     (const SonarData__MyPoints   *message);
size_t sonar_data__my_points__pack
                     (const SonarData__MyPoints   *message,
                      uint8_t             *out);
size_t sonar_data__my_points__pack_to_buffer
                     (const SonarData__MyPoints   *message,
                      ProtobufCBuffer     *buffer);
SonarData__MyPoints *
       sonar_data__my_points__unpack
                     (ProtobufCAllocator  *allocator,
                      size_t               len,
                      const uint8_t       *data);
void   sonar_data__my_points__free_unpacked
                     (SonarData__MyPoints *message,
                      ProtobufCAllocator *allocator);
/* --- per-message closures --- */

typedef void (*SonarData__PointMessage_Closure)
                 (const SonarData__PointMessage *message,
                  void *closure_data);
typedef void (*SonarData__MyPoints_Closure)
                 (const SonarData__MyPoints *message,
                  void *closure_data);

/* --- services --- */


/* --- descriptors --- */

extern const ProtobufCMessageDescriptor sonar_data__point_message__descriptor;
extern const ProtobufCMessageDescriptor sonar_data__my_points__descriptor;

PROTOBUF_C__END_DECLS


#endif  /* PROTOBUF_C_sonarData_2eproto__INCLUDED */
